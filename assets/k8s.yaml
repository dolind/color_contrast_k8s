# ----------------------------------------------------------------------
# Namespace
# ----------------------------------------------------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: demo-autoscale
---
# ----------------------------------------------------------------------
# Frontend (on controlplane only)
# ----------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: demo-autoscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      nodeSelector:
        kubernetes.io/hostname: controlplane   # only controlplane
      containers:
      - name: frontend
        image: frontend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: demo-autoscale
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
---
# ----------------------------------------------------------------------
# Backend (runs/scales on workers)
# ----------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: demo-autoscale
spec:
  replicas: 2  # start with one per node
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      # remove nodeSelector entirely
      containers:
      - name: backend
        image: backend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"
            memory: "64Mi"
          limits:
            cpu: "800m" # can burst to 0.8 core
            memory: "128Mi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: demo-autoscale
spec:
  selector:
    app: backend
  ports:
    - port: 8080
      targetPort: 8080

---
# ----------------------------------------------------------------------
# HPA for backend
# ----------------------------------------------------------------------
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend
  namespace: demo-autoscale
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 1
  maxReplicas: 6
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 30        # wait only 30 s before downscaling
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: "400m"  # scale if pods average 0.4 cores
