# Namespace definition to keep everything in one place
apiVersion: v1
kind: Namespace
metadata:
  name: demo-autoscale
---

# Deployment of backend and frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpu-demo
  namespace: demo-autoscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpu-demo
  template:
    metadata:
      labels:
        app: cpu-demo
    spec:
      containers:
      - name: cpu-demo
        image: cpu-demo:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "200m"
            memory: "64Mi"
          limits:
            cpu: "1600m"
            memory: "128Mi"
        livenessProbe:
          httpGet: { path: /healthz, port: 8080 }
          initialDelaySeconds: 3
          periodSeconds: 10
        readinessProbe:
          httpGet: { path: /healthz, port: 8080 }
          initialDelaySeconds: 2
          periodSeconds: 5
---
# Expose the service ports
apiVersion: v1
kind: Service
metadata:
  name: cpu-demo
  namespace: demo-autoscale
spec:
  selector:
    app: cpu-demo
  ports:
    - port: 80
      targetPort: 8080
---
# Scale the deployment based on CPU usage
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cpu-demo
  namespace: demo-autoscale
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cpu-demo
  minReplicas: 1
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: "800m"
